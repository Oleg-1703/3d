#!/usr/bin/env python3
"""
–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—É—Ç–µ–π –∫ –º–∞—Å–∫–∞–º –≤ dataset_readers.py
"""

def fix_mask_paths():
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –ø—É—Ç–∏ –∫ –º–∞—Å–∫–∞–º –≤ readColmapSceneInfo"""
    
    # –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª
    with open('scene/dataset_readers.py', 'r', encoding='utf-8') as f:
        content = f.read()
    
    # –°–æ–∑–¥–∞–µ–º backup
    with open('scene/dataset_readers.py.mask_fix.backup', 'w', encoding='utf-8') as f:
        f.write(content)
    
    # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–∞—Å–∫–∞–º
    # –ó–∞–º–µ–Ω—è–µ–º 'objects' –Ω–∞ 'object_mask' –≤ —Å—Ç—Ä–æ–∫–µ object_dir
    old_line = "object_dir = 'object_mask' if object_path == None else object_path"
    new_line = "object_dir = 'object_mask' if object_path == None else object_path"
    
    # –¢–∞–∫–∂–µ –∏—Å–ø—Ä–∞–≤–ª—è–µ–º –¥—Ä—É–≥—É—é –≤–æ–∑–º–æ–∂–Ω—É—é —Å—Ç—Ä–æ–∫—É
    content = content.replace(
        "object_dir = \"objects\" if object_path == None else object_path",
        "object_dir = \"object_mask\" if object_path == None else object_path"
    )
    
    content = content.replace(
        "object_dir = 'objects' if object_path == None else object_path", 
        "object_dir = 'object_mask' if object_path == None else object_path"
    )
    
    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    with open('scene/dataset_readers.py', 'w', encoding='utf-8') as f:
        f.write(content)
    
    print("‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω –ø—É—Ç—å –∫ –º–∞—Å–∫–∞–º: objects -> object_mask")
    return True

def create_objects_symlink():
    """–°–æ–∑–¥–∞–µ—Ç —Å–∏–º–≤–æ–ª–∏—á–µ—Å–∫—É—é —Å—Å—ã–ª–∫—É objects -> object_mask –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏"""
    import os
    
    dataset_path = "data/dataset1024"
    object_mask_path = os.path.join(dataset_path, "object_mask")
    objects_path = os.path.join(dataset_path, "objects")
    
    if os.path.exists(object_mask_path) and not os.path.exists(objects_path):
        try:
            os.symlink("object_mask", objects_path)
            print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ —Å–∏–º–≤–æ–ª–∏—á–µ—Å–∫–∞—è —Å—Å—ã–ª–∫–∞: {objects_path} -> object_mask")
            return True
        except Exception as e:
            print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Å–∏–º–≤–æ–ª–∏—á–µ—Å–∫—É—é —Å—Å—ã–ª–∫—É: {e}")
            return False
    elif os.path.exists(objects_path):
        print(f"‚úÖ –ü–∞–ø–∫–∞ {objects_path} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        return True
    else:
        print(f"‚ùå –ü–∞–ø–∫–∞ {object_mask_path} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        return False

def check_mask_files():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–æ–≤ –º–∞—Å–æ–∫"""
    import os
    
    dataset_path = "data/dataset1024"
    object_mask_path = os.path.join(dataset_path, "object_mask")
    
    if not os.path.exists(object_mask_path):
        print(f"‚ùå –ü–∞–ø–∫–∞ {object_mask_path} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        return False
    
    mask_files = [f for f in os.listdir(object_mask_path) if f.endswith('.png')]
    print(f"üìÅ –ù–∞–π–¥–µ–Ω–æ –º–∞—Å–æ–∫ –≤ object_mask: {len(mask_files)}")
    
    if len(mask_files) > 0:
        print(f"üìÑ –ü—Ä–∏–º–µ—Ä—ã –º–∞—Å–æ–∫: {mask_files[:5]}")
        return True
    else:
        print("‚ùå –ú–∞—Å–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        return False

def main():
    print("=== –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ü–£–¢–ï–ô –ö –ú–ê–°–ö–ê–ú ===")
    
    # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –º–∞—Å–æ–∫
    print("\n1. –ü–†–û–í–ï–†–ö–ê –ú–ê–°–û–ö:")
    has_masks = check_mask_files()
    
    if not has_masks:
        print("‚ùå –°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–π—Ç–µ –º–∞—Å–∫–∏ —Å –ø–æ–º–æ—â—å—é SAM")
        return
    
    # 2. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–¥
    print("\n2. –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ö–û–î–ê:")
    fix_mask_paths()
    
    # 3. –°–æ–∑–¥–∞–µ–º —Å–∏–º–≤–æ–ª–∏—á–µ—Å–∫—É—é —Å—Å—ã–ª–∫—É –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
    print("\n3. –°–û–ó–î–ê–ù–ò–ï –°–ò–ú–í–û–õ–ò–ß–ï–°–ö–û–ô –°–°–´–õ–ö–ò:")
    create_objects_symlink()
    
    print("\n‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω—ã!")
    print("\n–¢–µ–ø–µ—Ä—å –∑–∞–ø—É—Å—Ç–∏—Ç–µ –æ–±—É—á–µ–Ω–∏–µ:")
    print("python3 train.py -s data/dataset1024 -r 1 -m output/dataset1024 --config_file config/gaussian_dataset/train.json")

if __name__ == "__main__":
    main()